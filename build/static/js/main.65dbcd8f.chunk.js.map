{"version":3,"sources":["header/Header.js","main/Editor.js","main/Output.js","hooks/useLocalStorage.js","main/Main.js","sidebarLiveChat/SidebarLiveChat.js","sidebar/sidebarUserList/User.js","sidebar/sidebarUserList/SidebarUserList.js","sidebar/Sidebar.js","App.js","index.js"],"names":["sendUserName","socketVar","flagSetter","useState","name","setname","flag","setFlag","className","type","placeholder","onChange","e","target","value","onClick","emit","id","style","color","fontSize","Editor","props","language","displayName","open","setOpen","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","Output","src","srcDoc","title","sandbox","frameBorder","width","height","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","Main","socket","html","setHtml","css","setCss","js","setJs","setSrcDoc","timeout","setTimeout","clearTimeout","on","serverData","SidebarLiveChat","input","setInput","messages","setMessages","map","message","index","User","user","SidebarUserList","username","setusername","console","log","reason","splice","users","findIndex","item","Sidebar","Parda","background","position","zIndex","bottom","opacity","display","alignItems","justifyContent","borderTop","letterSpacing","App","io","Header","sendUsername","rootElement","document","getElementById","ReactDOM","render"],"mappings":"8MAEe,IAAEA,eAAcC,YAAWC,iBAAiB,MAAD,EAC9BC,mBAAS,IADqB,mBAC/CC,EAD+C,KACzCC,EADyC,OAE9BF,mBAAS,GAFqB,mBAE/CG,EAF+C,KAEzCC,EAFyC,KAwBtD,OAEI,yBAAQC,UAAU,SAAlB,UACI,qBAAKA,UAAU,UAAf,6BACA,qBAAKA,UAAU,aAAf,SAEiB,IAATF,EACI,qCACI,uBAAOG,KAAK,OAAOC,YAAY,aAAaC,SA5BpE,SAAmBC,GACfP,EAAQO,EAAEC,OAAOC,QA2BoEA,MAAOV,IACxE,wBACIW,QA1B5B,WACiB,KAATX,IAGAH,EAAUe,KAAK,WACX,CACIC,GAAIhB,EAAUgB,GACdb,KAAMA,IAGdG,EAAQ,GACRL,EAAW,KAgBSgB,MAAO,CAACC,MAAO,QAASC,SAAU,QAFtC,0BAOJ,4BAAIhB,U,wDChCb,SAASiB,EAAOC,GAAQ,IAC9BC,EAAqDD,EAArDC,SAAUC,EAA2CF,EAA3CE,YAAaV,EAA8BQ,EAA9BR,MAAOH,EAAuBW,EAAvBX,SAAUV,EAAaqB,EAAbrB,UADX,QAEVE,oBAAS,GAFC,mBAE3BsB,EAF2B,KAErBC,EAFqB,OAGdvB,mBAASW,GAHK,6BAUlC,OACI,sBAAKN,UAAS,2BAAsBiB,EAAO,GAAK,aAAhD,UACI,sBAAKjB,UAAU,eAAf,UACKgB,EACD,wBACIf,KAAK,SACLD,UAAU,sBACVO,QAAS,IAAMW,GAASC,IAAcA,IAH1C,SAII,cAAC,IAAD,CAAiBC,KAAMH,EAAOI,IAAgBC,WAGtD,cAAC,aAAD,CACIC,eAjBZ,SAAsBC,EAAQC,EAAMnB,GAChCb,EAAUe,KAAKO,EAAUT,GACzBH,EAASG,IAgBDA,MAAOA,EACPN,UAAU,sBACV0B,QAAS,CACLC,cAAc,EACdC,MAAM,EACNC,KAAMd,EACNe,MAAO,WACPC,aAAa,QCxClB,SAASC,GAAO,IAAEC,IAC/B,OACE,qBAAKjC,UAAU,OAAf,SACE,wBACEkC,OAAQD,EACRE,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,WCLA,SAASC,EAAgBC,EAAKC,GAC3C,MAAMC,EAHO,iBAGgBF,EAD4B,EAG/B9C,oBAAS,KACjC,MAAMiD,EAAYC,aAAaC,QAAQH,GACvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACFA,IAEAA,KAV8C,mBAGlDpC,EAHkD,KAG3C2C,EAH2C,KAkBzD,OAJAC,qBAAU,KACRL,aAAaM,QAAQR,EAAaI,KAAKK,UAAU9C,MAChD,CAACqC,EAAarC,IAEV,CAACA,EAAO2C,GCjBF,SAASI,GAAK,OAACC,IAAU,MAAD,EACXd,EAAgB,OAAQ,IADb,mBAC5Be,EAD4B,KACtBC,EADsB,OAEbhB,EAAgB,MAAO,IAFV,mBAE5BiB,EAF4B,KAEvBC,EAFuB,OAGflB,EAAgB,KAAM,IAHP,mBAG5BmB,EAH4B,KAGxBC,EAHwB,OAIPjE,mBAAS,IAJF,mBAI5BuC,EAJ4B,KAIpB2B,EAJoB,KA+BnC,OAzBAX,qBAAU,KACN,MAAMY,EAAUC,YAAW,KACvBF,EAAU,qCAAD,OAEHN,EAFG,qCAGFE,EAHE,uCAIDE,EAJC,0CAQV,KAEH,MAAO,IAAMK,aAAaF,KAC3B,CAACP,EAAME,EAAKE,IAEfL,EAAOW,GAAG,OAAQC,IACdV,EAAQU,MAEZZ,EAAOW,GAAG,OAAQC,IACdR,EAAOQ,MAEXZ,EAAOW,GAAG,cAAeC,IACrBN,EAAMM,MAIN,sBAAKlE,UAAU,OAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,cAACa,EAAD,CACIE,SAAS,MACTC,YAAY,OACZV,MAAOiD,EACPpD,SAAUqD,EACV/D,UAAW6D,IAEf,cAACzC,EAAD,CACIE,SAAS,MACTC,YAAY,MACZV,MAAOmD,EACPtD,SAAUuD,EACVjE,UAAW6D,IAEf,cAACzC,EAAD,CACIE,SAAS,aACTC,YAAY,KACZV,MAAOqD,EACPxD,SAAUyD,EACVnE,UAAW6D,OAGnB,cAACtB,EAAD,CAAQC,IAAKC,OC3DV,SAASiC,GAAgB,OAACb,IAAU,MAAD,EACpB3D,mBAAS,IADW,mBACvCyE,EADuC,KAChCC,EADgC,OAEd1E,mBAAS,IAFK,mBAEvC2E,EAFuC,KAE7BC,EAF6B,OAGtB5E,mBAAS,IAHa,6BAc9C,OAPA2D,EAAOW,GAAG,sBAAsBxC,GAAQ8C,EAAY,IAAID,EAAS7C,MAQ7D,sBAAKzB,UAAU,YAAYS,GAAG,gBAA9B,UACI,qBAAKT,UAAU,eAAeS,GAAG,eAAjC,uBACA,qBAAKT,UAAU,kBAAf,SAEQsE,EAASE,KAAI,CAACC,EAASC,IACZ,oBAAG1E,UAAU,UAAb,cAAqCyE,EAArC,MAA4BC,OAI/C,sBAAK1E,UAAU,aAAf,UACI,uBAAOC,KAAK,OAAOE,SAAWC,GAAMiE,EAASjE,EAAEC,OAAOC,OAAQA,MAAO8D,EAAOlE,YAAa,eACzF,wBAAQK,QAjBpB,WACc,KAAV6D,GAAsBd,EAAO9C,KAAK,qBAAsB4D,GAC9C,KAAVA,GAAsBC,EAAS,KAevB,SACI,mBAAGrE,UAAU,aAAaU,MAAO,CAACC,MAAO,kBC7B9C,SAASgE,EAAK7D,GAC3B,OAAO,qBAAKd,UAAU,eAAf,SAA+Bc,EAAM8D,OCE/B,SAASC,GAAgB,OAACvB,IAAU,MAAD,EACd3D,mBAAS,MADK,mBACvCmF,EADuC,KAC7BC,EAD6B,KAY9C,OAVAzB,EAAOW,GAAG,YAAaxC,IACnBsD,EAAYtD,GACZuD,QAAQC,IAAIxD,MAGhB6B,EAAOW,GAAG,cAAeiB,IACrBJ,EAASK,OAAOC,MAAMC,WAAUjF,GAAKA,EAAEK,KAAO6C,EAAO7C,KAAK,GAC1D6C,EAAO9C,KAAK,WAAYsE,MAIxB,qBAAK9E,UAAU,iBAAf,SAEQ8E,EAAWA,EAASN,KAAI,CAACc,EAAMZ,IAAU,cAACC,EAAD,CAAkBC,KAAMU,EAAK1F,MAAlB8E,KAChD,iDAAmB,uBAAnB,+BChBL,SAASa,GAAQ,OAACjC,IAC7B,OACI,sBAAKtD,UAAU,UAAf,UACI,qBAAKA,UAAU,gBAAf,mBACA,cAAC6E,EAAD,CAAiBvB,OAAQA,IACzB,cAACa,EAAD,CAAiBb,OAAQA,O,qBCDjCkC,G,MAAQ,IACD,qBAAK9E,MAAO,CACf+E,WAAY,UACZnD,MAAO,QACPC,OAAQ,qBACRmD,SAAU,WACVC,OAAQ,MACRC,OAAQ,EACRC,QAAS,GACTC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,UAAW,kBAXR,SAaH,oBACIvF,MAAO,CACHC,MAAO,QAASC,SAAU,OAAQsF,cAAe,OAFzD,sCAWO,SAASC,IACpB,IAAI7C,EAAS8C,IAAG,wCADU,QAEFzG,mBAAS,GAFP,mBAEnBG,EAFmB,KAEbC,EAFa,KAQ1B,OACI,sBAAKC,UAAU,OAAf,UACI,cAACqG,EAAD,CAAQC,aANhB,SAAsBhD,EAAQwB,GAC1BxB,EAAO9C,KAAK,WAAYsE,IAKgBrF,UAAW6D,EAAQ5D,WAAYK,IACnE,cAACwF,EAAD,CAASjC,OAAQA,IACjB,cAACD,EAAD,CAAMC,OAAQA,IAED,IAATxD,EACI,cAAC0F,EAAD,IACA,QC3CpB,MAAMe,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACR,EAAD,MAEFI,K","file":"static/js/main.65dbcd8f.chunk.js","sourcesContent":["import {useState} from 'react'\r\n\r\nexport default ({sendUserName, socketVar, flagSetter}) => {\r\n    const [name, setname] = useState(\"\");\r\n    const [flag, setFlag] = useState(0);\r\n\r\n    function localName(e) {\r\n        setname(e.target.value)\r\n    }\r\n\r\n    function handelClick() {\r\n        if (name === '') {\r\n        } else {\r\n\r\n            socketVar.emit('username',\r\n                {\r\n                    id: socketVar.id,\r\n                    name: name\r\n                }\r\n            );\r\n            setFlag(1)\r\n            flagSetter(1)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <header className=\"header\">\r\n            <div className=\"heading\">Live Code Share</div>\r\n            <div className=\"input-name\">\r\n                {\r\n                    flag === 0 ?\r\n                        <>\r\n                            <input type=\"text\" placeholder=\"Enter Name\" onChange={localName} value={name}/>\r\n                            <button\r\n                                onClick={handelClick}\r\n                                style={{color: \"black\", fontSize: \"18px\"}}>\r\n                                Get IN..!\r\n                            </button>\r\n                        </>\r\n                        :\r\n                        <p>{name}</p>\r\n                }\r\n\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n","import React, {useState, useEffect} from \"react\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/mode/css/css\";\r\nimport {Controlled as ControlledEditor} from \"react-codemirror2\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCompressAlt, faExpandAlt} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function Editor(props) {\r\n    let {language, displayName, value, onChange, socketVar} = props;\r\n    const [open, setOpen] = useState(true);\r\n    const [val, stVl] = useState(value);\r\n\r\n    function handleChange(editor, data, value) {\r\n        socketVar.emit(language, value);\r\n        onChange(value);\r\n    }\r\n\r\n    return (\r\n        <div className={`editor-container ${open ? \"\" : \"collapsed\"}`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"expand-collapse-btn\"\r\n                    onClick={() => setOpen((prevOpen) => !prevOpen)}>\r\n                    <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt}/>\r\n                </button>\r\n            </div>\r\n            <ControlledEditor\r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className=\"code-mirror-wrapper\"\r\n                options={{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode: language,\r\n                    theme: \"material\",\r\n                    lineNumbers: true\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","export default function Output({ src }) {\r\n  return (\r\n    <div className=\"pane\">\r\n      <iframe\r\n        srcDoc={src}\r\n        title=\"output\"\r\n        sandbox=\"allow-scripts\"\r\n        frameBorder=\"0\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst PREFIX = \"codepen-clone-\";\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key;\r\n\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey);\r\n    if (jsonValue != null) return JSON.parse(jsonValue);\r\n\r\n    if (typeof initialValue === \"function\") {\r\n      return initialValue();\r\n    } else {\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\r\n  }, [prefixedKey, value]);\r\n\r\n  return [value, setValue];\r\n}\r\n","import Editor from \"./Editor\";\r\nimport Output from \"./Output\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\n\r\nexport default function Main({socket}) {\r\n    const [html, setHtml] = useLocalStorage(\"html\", \"\");\r\n    const [css, setCss] = useLocalStorage(\"css\", \"\");\r\n    const [js, setJs] = useLocalStorage(\"js\", \"\");\r\n    const [srcDoc, setSrcDoc] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setSrcDoc(`\r\n        <html>\r\n          <body>${html}</body>\r\n          <style>${css}</style>\r\n          <script>${js}</script>\r\n        </html>\r\n      `);\r\n\r\n        }, 250);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [html, css, js]);\r\n\r\n    socket.on('xml', (serverData) => {\r\n        setHtml(serverData)\r\n    })\r\n    socket.on('css', (serverData) => {\r\n        setCss(serverData)\r\n    })\r\n    socket.on('javascript', (serverData) => {\r\n        setJs(serverData)\r\n    })\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"pane top-pane\">\r\n                <Editor\r\n                    language=\"xml\"\r\n                    displayName=\"HTML\"\r\n                    value={html}\r\n                    onChange={setHtml}\r\n                    socketVar={socket}\r\n                />\r\n                <Editor\r\n                    language=\"css\"\r\n                    displayName=\"CSS\"\r\n                    value={css}\r\n                    onChange={setCss}\r\n                    socketVar={socket}\r\n                />\r\n                <Editor\r\n                    language=\"javascript\"\r\n                    displayName=\"JS\"\r\n                    value={js}\r\n                    onChange={setJs}\r\n                    socketVar={socket}\r\n                />\r\n            </div>\r\n            <Output src={srcDoc}/>\r\n        </div>\r\n    );\r\n}\r\n","import {useState, useRef} from 'react'\r\n\r\nexport default function SidebarLiveChat({socket}) {\r\n    const [input, setInput] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [data, setData] = useState([]);\r\n\r\n    // var fun = () => messages.map(mes => <p className=\"message\">{mes}</p>)\r\n\r\n    socket.on('code-share-message', data => setMessages([...messages,data]));\r\n\r\n    function handelClick() {\r\n        input === '' ? null : socket.emit('code-share-message', input);\r\n        input === '' ? null : setInput(\"\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"live-chat\" id=\"draggable-div\">\r\n            <div className=\"chat-heading\" id=\"chat-heading\">Live Chat</div>\r\n            <div className=\"message-wrapper\">\r\n                {\r\n                    messages.map((message, index) => {\r\n                        return <p className=\"message\" key={index}> {message} </p>\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"input-send\">\r\n                <input type=\"text\" onChange={(e) => setInput(e.target.value)} value={input} placeholder={\"message...\"}/>\r\n                <button onClick={handelClick}>\r\n                    <i className=\"fa fa-send\" style={{color: \"blue\"}}></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","export default function User(props) {\r\n  return <div className=\"sidebar-item\">{props.user}</div>;\r\n}\r\n","import {useState, useEffect} from \"react\";\r\nimport User from \"./User\";\r\n\r\nexport default function SidebarUserList({socket}) {\r\n    const [username, setusername] = useState(null)\r\n    socket.on('username', (data) => {\r\n        setusername(data);\r\n        console.log(data);\r\n    });\r\n\r\n    socket.on(\"disconnect\", (reason) => {\r\n        username.splice(users.findIndex(e => e.id === socket.id), 1);\r\n        socket.emit('username', username);\r\n    });\r\n\r\n    return (\r\n        <div className=\"scroll-wrapper\">\r\n            {\r\n                username ? username.map((item, index) => <User key={index} user={item.name}/>) :\r\n                    <p>Please add your <br/>username to see others.</p>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import SidebarLiveChat from \"../sidebarLiveChat/SidebarLiveChat\";\r\nimport SidebarUserList from \"./sidebarUserList/SidebarUserList\";\r\n\r\nexport default function Sidebar({socket}) {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar-title\">Users</div>\r\n            <SidebarUserList socket={socket}/>\r\n            <SidebarLiveChat socket={socket}/>\r\n        </div>\r\n    );\r\n}\r\n","import Header from \"./header/Header\";\nimport Main from \"./main/Main\";\nimport Sidebar from \"./sidebar/Sidebar\";\nimport io from \"socket.io-client\";\nimport \"./styles.css\";\nimport {useState} from \"react\";\n\nvar Parda = () => {\n    return <div style={{\n        background: \"#1E1F26\",\n        width: \"100vw\",\n        height: \"calc(100vh - 50px)\",\n        position: \"absolute\",\n        zIndex: \"100\",\n        bottom: 0,\n        opacity: 0.9,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        borderTop: \"1px #fff solid\"\n    }}>\n        <h1\n            style={{\n                color: \"wheat\", fontSize: '50px', letterSpacing: \"6px\"\n            }}\n        >\n            Enter Your Username .\n        </h1>\n    </div>;\n\n}\n\nexport default function App() {\n    var socket = io(\"https://chat-himanshu.herokuapp.com/\");\n    const [flag, setFlag] = useState(0);\n\n    function sendUserName(socket, username) {\n        socket.emit('username', username);\n    }\n\n    return (\n        <div className=\"grid\">\n            <Header sendUsername={sendUserName} socketVar={socket} flagSetter={setFlag}/>\n            <Sidebar socket={socket}/>\n            <Main socket={socket}/>\n            {\n                flag === 0 ?\n                    <Parda/> :\n                    null\n            }\n        </div>\n    );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}